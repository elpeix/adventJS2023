function drawClock(time: string): string[][] {
  const [h1, h2, sep, m1, m2] = time.split('')
  const digits: { [key: string]: string[][] } = {
    '0': [
      ['*', '*', '*'],
      ['*', ' ', '*'],
      ['*', ' ', '*'],
      ['*', ' ', '*'],
      ['*', ' ', '*'],
      ['*', ' ', '*'],
      ['*', '*', '*'],
    ],
    '1': [
      [' ', ' ', '*'],
      [' ', ' ', '*'],
      [' ', ' ', '*'],
      [' ', ' ', '*'],
      [' ', ' ', '*'],
      [' ', ' ', '*'],
      [' ', ' ', '*'],
    ],
    '2': [
      ['*', '*', '*'],
      [' ', ' ', '*'],
      [' ', ' ', '*'],
      ['*', '*', '*'],
      ['*', ' ', ' '],
      ['*', ' ', ' '],
      ['*', '*', '*'],
    ],
    '3': [
      ['*', '*', '*'],
      [' ', ' ', '*'],
      [' ', ' ', '*'],
      ['*', '*', '*'],
      [' ', ' ', '*'],
      [' ', ' ', '*'],
      ['*', '*', '*'],
    ],
    '4': [
      ['*', ' ', '*'],
      ['*', ' ', '*'],
      ['*', ' ', '*'],
      ['*', '*', '*'],
      [' ', ' ', '*'],
      [' ', ' ', '*'],
      [' ', ' ', '*'],
    ],
    '5': [
      ['*', '*', '*'],
      ['*', ' ', ' '],
      ['*', ' ', ' '],
      ['*', '*', '*'],
      [' ', ' ', '*'],
      [' ', ' ', '*'],
      ['*', '*', '*'],
    ],
    '6': [
      ['*', '*', '*'],
      ['*', ' ', ' '],
      ['*', ' ', ' '],
      ['*', '*', '*'],
      ['*', ' ', '*'],
      ['*', ' ', '*'],
      ['*', '*', '*'],
    ],
    '7': [
      ['*', '*', '*'],
      [' ', ' ', '*'],
      [' ', ' ', '*'],
      [' ', ' ', '*'],
      [' ', ' ', '*'],
      [' ', ' ', '*'],
      [' ', ' ', '*'],
    ],
    '8': [
      ['*', '*', '*'],
      ['*', ' ', '*'],
      ['*', ' ', '*'],
      ['*', '*', '*'],
      ['*', ' ', '*'],
      ['*', ' ', '*'],
      ['*', '*', '*'],
    ],
    '9': [
      ['*', '*', '*'],
      ['*', ' ', '*'],
      ['*', ' ', '*'],
      ['*', '*', '*'],
      [' ', ' ', '*'],
      [' ', ' ', '*'],
      ['*', '*', '*'],
    ],
    ':': [
      [' ', ' ', ' '],
      [' ', ' ', ' '],
      [' ', '*', ' '],
      [' ', ' ', ' '],
      [' ', '*', ' '],
      [' ', ' ', ' '],
      [' ', ' ', ' '],
    ],
  }
  let result = []
  for (let i = 0; i < 7; i++) {
    result.push([
      ...digits[h1][i],
      ' ',
      ...digits[h2][i],
      ...digits[sep][i],
      ...digits[m1][i],
      ' ',
      ...digits[m2][i],
    ])
  }
  return result
}

export default drawClock

// Another solution using memoization
export function drawClockAlternative(time: string): string[][] {
  const [h1, h2, sep, m1, m2] = time.split('')
  const digits: { [key: string]: number[] } = {
    '0': [7, 5, 5, 5, 5, 5, 7],
    '1': [1, 1, 1, 1, 1, 1, 1],
    '2': [7, 1, 1, 7, 4, 4, 7],
    '3': [7, 1, 1, 7, 1, 1, 7],
    '4': [5, 5, 5, 7, 1, 1, 1],
    '5': [7, 4, 4, 7, 1, 1, 7],
    '6': [7, 4, 4, 7, 5, 5, 7],
    '7': [7, 1, 1, 1, 1, 1, 1],
    '8': [7, 5, 5, 7, 5, 5, 7],
    '9': [7, 5, 5, 7, 1, 1, 7],
    ':': [0, 0, 2, 0, 2, 0, 0],
  }

  const memoize = () => {
    const cache: {
      [key: string]: string[]
    } = {}
    return (n: number): string[] => {
      if (n in cache) {
        return cache[n]
      }
      const result = n
        .toString(2)
        .padStart(3, '0')
        .split('')
        .map((n) => (n === '1' ? '*' : ' '))
      cache[n] = result
      return result
    }
  }
  const memo = memoize()
  const result = []
  for (let i = 0; i < 7; i++) {
    result.push([
      ...memo(digits[h1][i]),
      ' ',
      ...memo(digits[h2][i]),
      ...memo(digits[sep][i]),
      ...memo(digits[m1][i]),
      ' ',
      ...memo(digits[m2][i]),
    ])
  }
  return result
}
